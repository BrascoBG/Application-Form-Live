{"version":3,"sources":["components/InputFields.js","components/Header.js","components/Footer.js","components/Applicants.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["Inputs","props","useState","name","setName","age","setAge","phone","setPhone","email","setEmail","date","setDate","communication","setCommunication","english","setEnglish","skills","setSkills","description","setDescription","terms","setTerms","alert","setAlert","style","display","onSubmit","e","preventDefault","eventHandler","className","htmlFor","value","id","type","placeholder","onChange","target","required","rows","checked","disabled","role","Header","to","Footer","rel","href","List","height","data","map","item","key","cursor","onClick","delPerson","width","viewBox","fill","xmlns","d","fillRule","clipRule","About","App","setData","items","uuidv4","useEffect","localData","localStorage","getItem","JSON","parse","setItem","stringify","filter","minHeight","exact","path","render","component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0f5aab18.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../App.css\";\r\n\r\nfunction Inputs(props) {\r\n  const [name, setName] = useState(\"\");\r\n  const [age, setAge] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [communication, setCommunication] = useState(\"\");\r\n  const [english, setEnglish] = useState(\"\");\r\n  const [skills, setSkills] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [terms, setTerms] = useState(false);\r\n  const [alert, setAlert] = useState(\"none\");\r\n\r\n  const saveData = (e) => {\r\n    e.preventDefault();\r\n    props.eventHandler(\r\n      name,\r\n      age,\r\n      phone,\r\n      email,\r\n      date,\r\n      communication,\r\n      english,\r\n      skills,\r\n      description\r\n    );\r\n    setName(\"\");\r\n    setAge(\"\");\r\n    setPhone(\"\");\r\n    setEmail(\"\");\r\n    setDate(\"\");\r\n    setCommunication(\"\");\r\n    setEnglish(\"\");\r\n    setSkills(\"\");\r\n    setDescription(\"\");\r\n    setTerms(false);\r\n    setAlert(\"block\");\r\n  };\r\n\r\n  const style = {\r\n    display: alert,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={saveData}>\r\n        <div className=\"flex\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Full Name</label>\r\n            <input\r\n              value={name}\r\n              className=\"form-control\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"Enter your full name\"\r\n              onChange={(e) => setName(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"age\">Age</label>\r\n            <input\r\n              value={age}\r\n              className=\"form-control\"\r\n              id=\"age\"\r\n              type=\"number\"\r\n              placeholder=\"Enter your age\"\r\n              onChange={(e) => setAge(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"phone\">Phone</label>\r\n            <input\r\n              value={phone}\r\n              className=\"form-control\"\r\n              id=\"phone\"\r\n              type=\"text\"\r\n              placeholder=\"Enter your phone number\"\r\n              onChange={(e) => setPhone(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"mail\">Email</label>\r\n            <input\r\n              value={email}\r\n              className=\"form-control\"\r\n              id=\"mail\"\r\n              type=\"email\"\r\n              placeholder=\"Enter your Email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </small>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"date\">Available to start:</label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"date\"\r\n              type=\"date\"\r\n              value={date}\r\n              onChange={(e) => setDate(e.target.value)}\r\n            />\r\n          </div>\r\n          <fieldset id=\"field\">\r\n            <legend>Preffered way for communication</legend>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              id=\"email\"\r\n              type=\"radio\"\r\n              name=\"communication\"\r\n              value=\"By Email\"\r\n              onChange={(e) => setCommunication(e.target.value)}\r\n            />\r\n            <label htmlFor=\"tel\">Phone</label>\r\n            <input\r\n              id=\"tel\"\r\n              type=\"radio\"\r\n              name=\"communication\"\r\n              value=\"By Phone\"\r\n              onChange={(e) => setCommunication(e.target.value)}\r\n            />\r\n          </fieldset>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"english\">English level</label>\r\n            <select\r\n              className=\"form-control\"\r\n              id=\"english\"\r\n              onChange={(e) => setEnglish(e.target.value)}\r\n            >\r\n              <option value=\"\">---</option>\r\n              <option value=\"A1\">A1 (Beginner)</option>\r\n              <option value=\"A2\">A2 (Elementary English)</option>\r\n              <option value=\"B1\">B1 (Intermediate English)</option>\r\n              <option value=\"B2\">B2 (Upper-Intermediate English)</option>\r\n              <option value=\"C1\">C1 (Advanced English)</option>\r\n              <option value=\"C2\">C2 (Proficiency English)</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex\">\r\n          <div className=\"form-group txtarea\">\r\n            <label htmlFor=\"skills\">Technical skills and courses</label>\r\n            <textarea\r\n              value={skills}\r\n              className=\"form-control\"\r\n              id=\"skills\"\r\n              rows={8}\r\n              placeholder=\"Write about your skills...\"\r\n              onChange={(e) => setSkills(e.target.value)}\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"form-group txtarea\">\r\n            <label htmlFor=\"presentation\">Short Personal Presentation</label>\r\n            <textarea\r\n              value={description}\r\n              className=\"form-control\"\r\n              id=\"presentation\"\r\n              rows={8}\r\n              placeholder=\"Describe yourself...\"\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex\">\r\n          <fieldset id=\"field-terms\">\r\n            <legend>Terms and Conditions</legend>\r\n            <label htmlFor=\"terms\">Agree with the terms?</label>\r\n            <input\r\n              id=\"terms\"\r\n              type=\"checkbox\"\r\n              value={terms}\r\n              onChange={(e) => setTerms(e.target.checked)}\r\n            />\r\n          </fieldset>\r\n        </div>\r\n        <br />\r\n        {terms ? (\r\n          <button className=\"btn-submit\">Submit</button>\r\n        ) : (\r\n          <button className=\"btn-disabled\" disabled>\r\n            Check the Terms\r\n          </button>\r\n        )}\r\n      </form>\r\n      <div className=\"alert alert-success\" role=\"alert\" style={style}>\r\n        You successfully added a new aplicant! Go check it out from Navigation!\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Inputs;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div>\r\n      <h1>Application form</h1>\r\n      <nav>\r\n        <Link to=\"/\">Home</Link>\r\n        <Link to=\"/list\">Applicants</Link>\r\n        <Link to=\"/about\">About</Link>\r\n      </nav>\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <>\r\n      <hr />\r\n      <p className=\"footer\">\r\n        &copy;{\" \"}\r\n        <a\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"https://github.com/BrascoBG/Application-Form\"\r\n        >\r\n          Code Here\r\n        </a>\r\n      </p>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nfunction List(props) {\r\n  return (\r\n    <div style={{ height: \"100vh\" }} className=\"table-responsive\">\r\n      <h3>All the applicants so far</h3>\r\n      <table className=\"table table-sm table-hover table-bordered\">\r\n        <tbody>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Age</th>\r\n            <th>Phone</th>\r\n            <th>Email</th>\r\n            <th>Available from:</th>\r\n            <th>Way of communication</th>\r\n            <th>English level</th>\r\n            <th>Technical skills</th>\r\n            <th>Description</th>\r\n            <th></th>\r\n          </tr>\r\n          {props.data.map((item) => (\r\n            <tr key={item.id}>\r\n              <td>{item.name}</td>\r\n              <td>{item.age}</td>\r\n              <td>{item.phone}</td>\r\n              <td>{item.email}</td>\r\n              <td>{item.date}</td>\r\n              <td>{item.communication}</td>\r\n              <td>{item.english}</td>\r\n              <td>{item.skills}</td>\r\n              <td>{item.description}</td>\r\n              <td\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() => props.delPerson(item.id)}\r\n              >\r\n                <svg\r\n                  className=\"bi bi-trash\"\r\n                  width=\"1em\"\r\n                  height=\"1em\"\r\n                  viewBox=\"0 0 16 16\"\r\n                  fill=\"currentColor\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path d=\"M5.5 5.5A.5.5 0 016 6v6a.5.5 0 01-1 0V6a.5.5 0 01.5-.5zm2.5 0a.5.5 0 01.5.5v6a.5.5 0 01-1 0V6a.5.5 0 01.5-.5zm3 .5a.5.5 0 00-1 0v6a.5.5 0 001 0V6z\" />\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M14.5 3a1 1 0 01-1 1H13v9a2 2 0 01-2 2H5a2 2 0 01-2-2V4h-.5a1 1 0 01-1-1V2a1 1 0 011-1H6a1 1 0 011-1h2a1 1 0 011 1h3.5a1 1 0 011 1v1zM4.118 4L4 4.059V13a1 1 0 001 1h6a1 1 0 001-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\r\n                    clipRule=\"evenodd\"\r\n                  />\r\n                </svg>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction About() {\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n      <h3>Hello and Welcome</h3>\r\n      <div className=\"jumbotron\">\r\n        <h3 className=\"display-4\">ReactJS SPA</h3>\r\n        <p className=\"lead\">\r\n          This is a SPA built with ReactJS, React Router, Functional Components\r\n          with Hooks, Bootstrap, Git, GitHub, CSS3, Flexbox, LocalStorage, etc.\r\n        </p>\r\n        <hr className=\"my-4\" />\r\n        <p>It's adding applicants into a table.</p>\r\n        <Link\r\n          id=\"btn-try\"\r\n          className=\"btn btn-outline-primary\"\r\n          to=\"/\"\r\n          role=\"button\"\r\n        >\r\n          Try it\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Inputs from \"./components/InputFields\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport List from \"./components/Applicants\";\nimport About from \"./components/About\";\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const eventHandler = (\n    name,\n    age,\n    phone,\n    email,\n    date,\n    communication,\n    english,\n    skills,\n    description\n  ) => {\n    const items = {\n      name,\n      age,\n      phone,\n      email,\n      date,\n      communication,\n      english,\n      skills,\n      description,\n      id: uuidv4(),\n    };\n    setData([...data, items]);\n  };\n\n  useEffect(() => {\n    const localData = localStorage.getItem(\"Data\");\n    if (localData !== null) {\n      setData(JSON.parse(localData));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"Data\", JSON.stringify(data));\n  }, [data]);\n\n  const delPerson = (id) => {\n    setData(data.filter((item) => item.id !== id));\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <div style={{ minHeight: \"100vh\" }}>\n          <Route\n            exact\n            path=\"/\"\n            render={() => <Inputs eventHandler={eventHandler} />}\n          />\n          <Route\n            path=\"/list\"\n            render={() => <List data={data} delPerson={delPerson} />}\n          />\n          <Route path=\"/about\" component={About} />\n        </div>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}